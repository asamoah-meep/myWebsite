{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.cabf57a253baf550d3cf.hot-update.js","sources":["webpack:///./components/stickyBar.js","webpack:///./pages/index.js"],"sourcesContent":["import Link from 'next/link';\r\nimport 'styles.css';\r\nimport * as THREE from 'three';\r\nimport Dropdown from 'components/dropdown.js';\r\nimport GLTFLoader from 'three-gltf-loader';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHome, faAddressCard,faEnvelope,faTasks} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass StickyBar extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.toggleTheme = this.toggleTheme.bind(this);\r\n\r\n        this.state={\r\n            theme: 'on'\r\n        }\r\n    }\r\n\r\n    toggleTheme(evt){\r\n        console.log(evt.target.value);\r\n        this.setState( (oldState)=>{\r\n           let newTheme = \"\";\r\n           oldState.theme==='on'? newTheme='off': newTheme='on';\r\n           return {theme:newTheme};\r\n        });\r\n       \r\n    }\r\n\r\n    componentDidMount(){\r\n        const scene = new THREE.Scene();\r\n        const camera = new THREE.PerspectiveCamera(75,window.innerHeight/window.innerHeight,.1,1000);\r\n\r\n        camera.position.z = 5;\r\n        camera.position.x = -1;\r\n        const renderer = new THREE.WebGLRenderer({antialias:true,alpha:true});\r\n        renderer.setSize(100,100);\r\n        renderer.setClearColor(0xffffff,0);\r\n        renderer.gammaOutput=true;\r\n        renderer.gammaFactor=2.2;\r\n        this.mount.appendChild( renderer.domElement );\r\n       \r\n        const loader = new GLTFLoader();\r\n        let logo = undefined;\r\n        \r\n        const animate = function () {\r\n            requestAnimationFrame( animate );\r\n            renderer.render( scene, camera );\r\n          };\r\n\r\n        loader.load('/Logo.gltf', function(gltf){\r\n            logo = gltf.scene;\r\n            logo.rotation.x=-Math.PI/12;\r\n            logo.rotation.y=Math.PI/12;\r\n            logo.rotation.z=Math.PI/6;\r\n            logo.scale.set(2,2,2);\r\n            scene.add(logo);\r\n            animate();\r\n\r\n        },undefined,function(error){\r\n            console.error(error);\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        const contact = <>\r\n            <p>E-mail: ja3180@nyu.edu</p>\r\n            <p>Telephone: 914-224-6241</p>\r\n            <a href=\"https://github.com/asamoah-meep\" target=\"_blank\">Github</a>\r\n        </>\r\n\r\n        const projects =             \r\n        <ul>\r\n            <li><Link href=\"/#TimelineHeader\">\r\n                <a>Tutor Timeline</a>\r\n            </Link></li>\r\n            <li><Link href=\"/#KMeansHeader\">\r\n                <a>K-Means Demo</a>\r\n            </Link></li>\r\n            <li><Link href=\"/#WebsiteHeader\">\r\n                <a>This Website</a>    \r\n            </Link></li>\r\n        </ul>\r\n\r\n        const bar = <div id='stickyBar'>\r\n            <div id=\"logoMount\" ref={ref=>(this.mount = ref)}/>\r\n            <h1 style={{position:\"relative\", left:\"12px\"}}>Jeffrey</h1>\r\n            <h1 style={{position:\"relative\", left:\"25px\"}}>Asamoah</h1>\r\n            <Link href='/'>\r\n                <a className='subHeading'><FontAwesomeIcon className='barIcon' icon={faHome}/> Home</a>\r\n            </Link>\r\n            <Link href=\"/about\">\r\n                <a className='subHeading'><FontAwesomeIcon className='barIcon' icon={faAddressCard}/> About</a>\r\n            </Link>\r\n            <FontAwesomeIcon className='barIcon' icon={faTasks}/> <Dropdown title=\"Projects\" barDropdown>{projects}</Dropdown><br/>\r\n            <FontAwesomeIcon className='barIcon' icon={faEnvelope}/> <Dropdown title='Contact and Media' barDropdown>{contact}</Dropdown>\r\n            <div id='toggleTheme'>\r\n                <span style={{visibility: this.state.theme==='on'? 'visible': 'hidden'}}>Light</span>\r\n                <label className=\"switch\">\r\n                    <input type=\"checkbox\" value={this.state.theme} onChange={this.toggleTheme}/>\r\n                    <span className=\"slider round\"/>\r\n                </label>\r\n                <span style={{visibility: this.state.theme==='off'? 'visible': 'hidden'}}>Dark</span>\r\n            </div>\r\n        </div>;\r\n\r\n        const style = <style>{`\r\n\r\n            #logoMount{\r\n                height:75px;\r\n            }\r\n\r\n            .barIcon{\r\n                color: #D9B08C;\r\n                display:inline-block;\r\n                position:relative;\r\n                right:5px;\r\n            }\r\n\r\n            .barDropdown{\r\n                display:inline-block;\r\n            }\r\n\r\n            #stickyBar{\r\n                vertical-align:top;\r\n                position: relative;\r\n                display:inline-block;\r\n                left:20px;\r\n                width:250px;\r\n                margin-right: 5px;\r\n                margin-top:5px;\r\n            }\r\n            .subHeading{\r\n                font-family: NunitoItalic;\r\n                color: #D9B08C;\r\n                display: block;\r\n                font-size: 1.5rem;\r\n                margin-block-start: 1em;\r\n                margin-block-end: 1em;\r\n                margin-inline-start: 0px;\r\n                margin-inline-end: 0px;\r\n                font-weight: bold;\r\n            }\r\n\r\n            #toggleTheme{\r\n                position:relative;\r\n                left:10%;\r\n            }\r\n            \r\n            #toggleTheme span{\r\n                padding:10px;\r\n            }\r\n\r\n            .switch {\r\n                position: relative;\r\n                display: inline-block;\r\n                width: 60px;\r\n                height: 34px;\r\n            }\r\n\r\n            .switch input {\r\n                opacity: 0;\r\n                width: 0;\r\n                height: 0;\r\n            }\r\n\r\n            .slider {\r\n                position: absolute;\r\n                cursor: pointer;\r\n                top: 0;\r\n                left: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                background-color: #ccc;\r\n                -webkit-transition: .4s;\r\n                transition: .4s;\r\n            }\r\n\r\n            .slider:before {\r\n                position: absolute;\r\n                content: \"\";\r\n                height: 26px;\r\n                width: 26px;\r\n                left: 4px;\r\n                bottom: 4px;\r\n                background-color: white;\r\n                -webkit-transition: .4s;\r\n                transition: .4s;\r\n            }\r\n\r\n            input[type='checkbox']:not(:checked) + .slider{\r\n                background-color: #F78888;\r\n            }\r\n\r\n            input[type='checkbox']:checked + .slider {\r\n                background-color: #2F4454;\r\n            }\r\n\r\n            input:focus + .slider {\r\n                box-shadow: 0 0 1px #15DB95;\r\n            }\r\n\r\n            input:checked + .slider:before {\r\n                -webkit-transform: translateX(26px);\r\n                -ms-transform: translateX(26px);\r\n                transform: translateX(26px);\r\n            }\r\n\r\n            .slider.round {\r\n                border-radius: 34px;\r\n            }\r\n\r\n            .slider.round:before {\r\n                border-radius: 50%;\r\n            }\r\n        `}</style>      \r\n\r\n\r\n        const light = <style global jsx>{`\r\n        `}</style>;\r\n\r\n        const dark = <style global jsx>{`\r\n        h1{\r\n            color: #FFCB9A;\r\n        }\r\n        h3{\r\n            color: #D9B08C;\r\n        }\r\n        p,a,span,li,div{\r\n            c\r\n        }\r\n        `}</style>\r\n        return <>\r\n            {style}\r\n            {bar}\r\n        </>;\r\n    }\r\n}\r\n\r\nexport default StickyBar;","import 'styles.css';\r\nimport Bar from 'components/stickyBar.js';\r\nimport Layout from 'components/layout.js';\r\nimport Helmet from 'react-helmet';\r\nimport Link from 'next/link';\r\nimport Dropdown from 'components/dropdown.js';\r\n\r\nclass Index extends React.Component{\r\n\r\n    render(){\r\n\r\n        return <>\r\n        <Bar/>\r\n        <Layout>\r\n            <Helmet>\r\n                <title>Home</title>\r\n            </Helmet>\r\n            <section id='AboutMe'>\r\n                <Dropdown title=\"About Me\" openOnStart>\r\n                <p>Hey, looks like you found my website!</p>\r\n                <p>My name is Jeffrey Asamoah, and I'm currently living in the NYC metropolitan area.\r\n                    I'm studying Mathematics and Computer Science at New York University and plan\r\n                    to graduate in May 2020. My hobbies include running, coding, and 3-D modelling.\r\n                </p>\r\n                </Dropdown>\r\n                <Link href=\"/about\">\r\n                    <a>See more here</a>\r\n                </Link>\r\n            </section>\r\n            <section id='TimelineHeader'>\r\n                <Dropdown title=\"Timeline App\">\r\n                <p>I created this timeline app to emulate the project I worked on during my Comcast Internship. At my internship my project was \r\n                    to create a foward-facing visual to display how the Xfinity Fraud Managment (XFM) team monitored and mitigated fraud activity.\r\n                    For my internship I displayed the ~40 use cases of potentially fraudulent activity and plotted the occurences of each usecase. The \r\n                    app allowed for you to filter which items you wanted to look at as well as select the timeframe on which you were looking.\r\n                    I recreated that project using data from my tutoring experience at NYU. Here I display when each student would approach various tutors\r\n                    and the success of the tutoring session.\r\n                </p>\r\n                <ul>\r\n                    <li>Built using <a href=\"https://reactjs.org/\" target=\"_blank\"> React.js</a></li>\r\n                    <li>Data was read from<a href=\"http://cassandra.apache.org/\" target=\"_blank\"> Cassandra DB (now static data)</a></li>\r\n                    <li>Used <a href=\"https://d3js.org/\" target=\"_blank\">D3 libraries</a> to scale and plot data points according to their dates</li>\r\n                    <li>Used D3 libraries to create a window frame to adjust the date window of viewing</li>\r\n                </ul>\r\n                </Dropdown>\r\n                <a href='https://github.com/asamoah-meep/101Timeline' target=\"_blank\">View source</a><br/>\r\n                <Link href=\"/101Timeline\">\r\n                    <a>Live Demo</a>\r\n                </Link>\r\n            </section>\r\n            <section id='KMeansHeader'>\r\n                <Dropdown title=\"K-Means Demo\">\r\n                    <p>This <a href=\"https://en.wikipedia.org/wiki/K-means_clustering\" target=\"_blank\">K-Means</a> project is a self-made data clustering algorithm that \r\n                        I created for my predictive analytics class. The algorithm takes in 24 documents roughly concerned with 3 topics (Mouth and Foot Diseases, \r\n                        Airline Safety, and International Housing Prices) and clusters them into k centroids. The data is 1<sup>st</sup> converted into a TF-IDF matrix adjusted for \r\n                        the lengths of the respective documents. The data is then trimmed by removing low intra-dimensional words, combining highly correlated dimensions, \r\n                        and then adjusting the matrix using <a href=\"https://en.wikipedia.org/wiki/Principal_component_analysis\" target=\"_blank\">PCA</a>.The similarity is \r\n                        measured using <a href=\"https://en.wikipedia.org/wiki/Cosine_similarity\" target=\"_blank\">cosine similarity</a> into clusted determined by initial \r\n                        means furthest away from each other (see <a href=\"https://en.wikipedia.org/wiki/K-means%2B%2B\" target=\"_blank\">K-Means++</a>). \r\n                        After the data is clustered it is then transformed again by PCA onto 2 dimensions and plotted on a 2-D graph. \r\n                    </p>\r\n                    <ul>\r\n                        <li>Built in <a href=\"https://www.oracle.com/technetwork/java/javase/overview/java8-2100321.html\" target=\"_blank\">Java</a></li>\r\n                        <li>Used <a href=\"https://commons.apache.org/proper/commons-math/\" target=\"_blank\">Apache Commons</a> Math for vector/matrix manipulation</li>\r\n                        <li>Used <a href=\"http://www.jfree.org/jfreechart/\" target=\"_blank\">JFree charts</a> to create plots</li>\r\n                    </ul>\r\n                </Dropdown>\r\n                <a href='https://github.com/asamoah-meep' target=\"_blank\">View source</a>\r\n            </section>\r\n            <section id='QRHeader'>\r\n                <Dropdown title='QR Marketing Project'>\r\n                    <p>Calvin Klein marketing project utilizing QR codes</p>\r\n                </Dropdown>\r\n                <Link href='/pvh'>\r\n                        <a target='_blank'>QR Project</a>\r\n                </Link>\r\n            </section>\r\n            <section id=\"WebsiteHeader\">\r\n                <Dropdown title='This Website'>\r\n                    <p>\r\n                        More to come...\r\n                    </p>\r\n                    <ul>\r\n                        <li>Built using <a href=\"https://nextjs.org/\" target=\"_blank\">Next.js</a></li>\r\n                        <li>Hosted using <a href=\"https://zeit.co/docs#related\" target=\"_blank\">Zeit</a></li>\r\n                    </ul>\r\n                </Dropdown>\r\n            </section>\r\n        </Layout>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AACA;AADA;AALA;AAQA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA+GA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAUA;AAIA;;;;AAtOA;AACA;AAwOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAnFA;AACA;AAqFA;;;;A","sourceRoot":""}