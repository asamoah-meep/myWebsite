{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.6a25cf52cbc352cc7cc9.hot-update.js","sources":["webpack:///./components/stickyBar.js"],"sourcesContent":["import Link from 'next/link';\r\nimport 'styles.css';\r\nimport Cookie from 'js-cookie';\r\nimport themeValues from '../public/theme.js';\r\nimport Dropdown from 'components/dropdown.js';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHome, faAddressCard,faEnvelope,faTasks} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ProjectHeader from 'components/projectHeader.js';\r\nimport Model from '../public/model.js';\r\nclass StickyBar extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.toggleTheme = this.toggleTheme.bind(this);\r\n        this.openDropdown = this.openDropdown.bind(this);\r\n        this.state = themeValues(Cookie.get('theme'));\r\n    }\r\n\r\n    toggleTheme(evt){\r\n\r\n        let background, text,headings,subheadings,theme;\r\n\r\n        if(evt.target.value==='light'){ //change to dark\r\n            background = '#2F4454';\r\n            text = '#D1E8E2';\r\n            headings = '#FFCB9A';\r\n            subheadings = '#D9B08c';\r\n            theme = 'dark';\r\n            Cookie.set('theme','dark');\r\n        }else{ //change to light\r\n            background = 'rgba(223,240,255,0.9)';\r\n            text = 'rgb(58,118,158)';\r\n            headings = '#5DA2D5';\r\n            subheadings = '#CB669E';\r\n            theme = 'light';\r\n            Cookie.set('theme','light');\r\n        }\r\n\r\n        this.setState({\r\n            background,\r\n            text,\r\n            headings,\r\n            subheadings,\r\n            theme\r\n        });\r\n\r\n       \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.logoModel = new Model(this.state.theme);\r\n        this.mount.appendChild(this.logoModel.renderer.domElement);\r\n        this.logoModel.load();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.logoModel = new Model(this.state.theme);\r\n        console.log(this.state.theme);\r\n        this.logoModel.load();\r\n    }\r\n\r\n    openDropdown(ele){\r\n        const myDrops = this.props.children.slice(1).map(ele=>ele.props.children[0]);\r\n        const selectedDrop = myDrops[0];\r\n        console.log(myDrops,selectedDrop);\r\n        //selectedDrop.expand();\r\n    }\r\n\r\n    render(){\r\n        const contact = <>\r\n            <p>E-mail: ja3180@nyu.edu</p>\r\n            <p>Telephone: 914-224-6241</p>\r\n            <a href=\"https://github.com/asamoah-meep\" target=\"_blank\">Github</a>\r\n        </>\r\n\r\n        const projects = <ul>\r\n            <ProjectHeader subject='Timeline' name='Tutor Timeline'/>\r\n            <ProjectHeader subject='KMeans' name='K-Means Demo'/>\r\n            <ProjectHeader subject='Website' name='This Website'/>\r\n            <ProjectHeader subject='QR' name='QR Marketing Project'/>\r\n        </ul>\r\n\r\n        const bar = <div id='stickyBar'>\r\n            <div id=\"logoMount\" ref={ref=>(this.mount = ref)}>\r\n                <p>Rotate me!</p>\r\n            </div>\r\n            <h1 style={{position:\"relative\", left:\"12px\"}}>Jeffrey</h1>\r\n            <h1 style={{position:\"relative\", left:\"25px\"}}>Asamoah</h1>\r\n            <Link href='/'>\r\n                <a className='subHeading'><FontAwesomeIcon className='barIcon' icon={faHome}/> Home</a>\r\n            </Link>\r\n            <Link href=\"/about\">\r\n                <a className='subHeading'><FontAwesomeIcon className='barIcon' icon={faAddressCard}/> About</a>\r\n            </Link>\r\n            <FontAwesomeIcon className='barIcon' icon={faTasks}/> <Dropdown theme={this.state.theme} title=\"Projects\" barDropdown>{projects}</Dropdown><br/>\r\n            <FontAwesomeIcon className='barIcon' icon={faEnvelope}/> <Dropdown theme={this.state.theme} title='Contact / Media' barDropdown>{contact}</Dropdown>\r\n            <div id='toggleTheme'>\r\n                <span style={{visibility: this.state.theme==='light'? 'visible': 'hidden'}}>Light</span>\r\n                <label className=\"switch\">\r\n                    <input type=\"checkbox\" value={this.state.theme} onChange={this.toggleTheme}/>\r\n                    <span className=\"slider round\"/>\r\n                </label>\r\n                <span style={{visibility: this.state.theme==='dark'? 'visible': 'hidden'}}>Dark</span>\r\n            </div>\r\n        </div>;\r\n\r\n        const globalStyle=  <style>{`\r\n        body{\r\n            background: ${this.state.background}\r\n        }\r\n\r\n        h1{\r\n            color: ${this.state.headings}\r\n        }\r\n\r\n        h3, div svg{\r\n            color: ${this.state.subheadings}\r\n        }\r\n\r\n        p,a,span,li,div,form,text{\r\n            color: ${this.state.text}\r\n        }\r\n\r\n        section{\r\n            boder-bottom: solid 2px ${this.state.subheadings};\r\n        }`}</style>;\r\n\r\n        const style = <style>{`\r\n\r\n            #logoMount{\r\n                height:75px;\r\n                position:relative;\r\n            }\r\n\r\n            #logoMount p{\r\n                visibility: hidden;\r\n                width:120px;\r\n                opacity: .4;\r\n                text-align:center;\r\n                animation-name: fadeIn;\r\n                animation-duration: 5s;\r\n                padding: 5px 0;\r\n                border-radius: 6px;\r\n                position: absolute;\r\n                top:-30px;\r\n            }\r\n\r\n            @keyframes fadeIn{\r\n                from {visibility: visible;}\r\n                to {visibility: hidden;}\r\n            }\r\n\r\n            #logoMount:hover p{\r\n                visibility: visible;\r\n            }\r\n\r\n            .barIcon{\r\n                color: ${this.state.subheadings};\r\n                display:inline-block;\r\n                position:relative;\r\n                right:5px;\r\n            }\r\n\r\n            .barDropdown{\r\n                display:inline-block;\r\n            }\r\n\r\n            #content{\r\n                display:inline-block;\r\n                margin-top:5px;\r\n                position:relative;\r\n                left: 30px;\r\n                width:730px;\r\n                padding-left: 15px;\r\n                vertical-align:top;\r\n                border-left: solid 2px ${this.state.subheadings};\r\n            }\r\n\r\n            #stickyBar{\r\n                vertical-align:top;\r\n                position: relative;\r\n                display:inline-block;\r\n                left:20px;\r\n                // width:200px;\r\n                margin-right: 5px;\r\n                margin-top:5px;\r\n            }\r\n            .subHeading{\r\n                font-family: NunitoItalic;\r\n                color: ${this.state.subheadings};\r\n                display: block;\r\n                font-size: 1.5rem;\r\n                margin-block-start: 1em;\r\n                margin-block-end: 1em;\r\n                margin-inline-start: 0px;\r\n                margin-inline-end: 0px;\r\n                font-weight: bold;\r\n            }\r\n\r\n            #toggleTheme{\r\n                position:relative;\r\n                left:10%;\r\n            }\r\n            \r\n            #toggleTheme span{\r\n                padding:10px;\r\n            }\r\n\r\n            .switch {\r\n                position: relative;\r\n                display: inline-block;\r\n                width: 60px;\r\n                height: 34px;\r\n            }\r\n\r\n            .switch input {\r\n                opacity: 0;\r\n                width: 0;\r\n                height: 0;\r\n            }\r\n\r\n            .slider {\r\n                position: absolute;\r\n                cursor: pointer;\r\n                top: 0;\r\n                left: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                background-color: #ccc;\r\n                -webkit-transition: .4s;\r\n                transition: .4s;\r\n            }\r\n\r\n            .slider:before {\r\n                position: absolute;\r\n                content: \"\";\r\n                height: 26px;\r\n                width: 26px;\r\n                left: 4px;\r\n                bottom: 4px;\r\n                background-color: white;\r\n                -webkit-transition: .4s;\r\n                transition: .4s;\r\n            }\r\n\r\n            input[type='checkbox']:not(:checked) + .slider{\r\n                background-color: rgba(223,240,255,0.9);\r\n            }\r\n\r\n            input[type='checkbox']:checked + .slider {\r\n                background-color: #2F4454;\r\n            }\r\n\r\n            input:focus + .slider {\r\n                box-shadow: 0 0 1px #15DB95;\r\n            }\r\n\r\n            input:checked + .slider:before {\r\n                -webkit-transform: translateX(26px);\r\n                -ms-transform: translateX(26px);\r\n                transform: translateX(26px);\r\n            }\r\n\r\n            .slider.round {\r\n                border-radius: 34px;\r\n            }\r\n\r\n            .slider.round:before {\r\n                border-radius: 50%;\r\n            }\r\n        `}</style>      \r\n\r\n        console.log(this.props.children);\r\n        return <>\r\n            {style}\r\n            {globalStyle}\r\n            {bar}\r\n            <div id='content'>{this.props.children}</div>\r\n        </>;\r\n    }\r\n}\r\n\r\nexport default StickyBar;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AALA;AAMA;AACA;;;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AASA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgJA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AA/QA;AACA;AAiRA;;;;A","sourceRoot":""}