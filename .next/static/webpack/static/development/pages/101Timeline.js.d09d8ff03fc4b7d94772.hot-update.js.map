{"version":3,"file":"static/webpack/static\\development\\pages\\101Timeline.js.d09d8ff03fc4b7d94772.hot-update.js","sources":["webpack:///./components/Usecase.js"],"sourcesContent":["import React from 'react';\r\n// import './App.css';\r\nimport * as d3Scale from \"d3-scale\";\r\nimport * as d3Selection from \"d3-selection\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nclass UseCaseRow extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.rowName=this.props.name;\r\n        this.createItems=this.createItems.bind(this);\r\n        this.removeItems = this.removeItems.bind(this);\r\n        this.createInfo=this.createInfo.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.createItems();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.removeItems();\r\n        this.createItems();\r\n    }\r\n\r\n    removeItems(){\r\n        d3Selection.select(`#${this.rowName}`).selectAll(\"*\").remove();\r\n        d3Selection.select(`#${this.rowName}`).append(\"rect\")\r\n            .classed(\"border\",true)\r\n            .attr(\"width\",this.props.width+150)\r\n            .attr(\"height\",140);\r\n    }\r\n    createItems(){\r\n        const data = this.props.data.filter(\r\n            ele=> moment(ele.date).isBetween(this.props.start,this.props.end));\r\n        const scale = d3Scale.scaleTime()\r\n            .domain([this.props.start,this.props.end])\r\n            .range([135,this.props.width+135]);\r\n\r\n        d3Selection.select(`#${this.rowName}`)\r\n            .selectAll(\"rect[class = rowImg]\")\r\n            .data(data)\r\n            .enter()\r\n            .append('text')\r\n            .classed(\"fas\",true)\r\n            .text(d=>{\r\n                if(d.tutor.includes(\"Jeff\"))\r\n                    return '\\uf6d5'; //dragon\r\n                else if(d.tutor.includes(\"Julia\"))\r\n                    return '\\uf6be'; //cat\r\n                else if(d.tutor.includes(\"ella\"))\r\n                    return '\\uf094'; // lemon\r\n                else if(d.tutor.includes(\"Alex\"))\r\n                    return '\\uf6d3'; // dog\r\n                else if(d.tutor.includes(\"Alan\"))\r\n                    return '\\uf4ba'; //bird\r\n                else if(d.tutor.includes(\"Hari\"))\r\n                    return '\\uf7ef'; //cheese\r\n                else if(d.tutor.includes(\"Ilias\"))\r\n                    return '\\uf6ed'; //hippo\r\n                else if(d.tutor.includes(\"Aashish\"))\r\n                    return '\\uf6f0'; //horse\r\n                else if(d.tutor.includes(\"Gilad\"))\r\n                    return '\\uf700'; //frog\r\n                else if(d.tutor.includes(\"Cindy\"))\r\n                    return '\\uf717'; //spider\r\n                else if(d.tutor.includes(\"Jonathan\"))\r\n                    return '\\uf5d1'; //apple\r\n                else if(d.tutor.includes(\"Santiago\"))\r\n                    return '\\uf7ec'; //toast\r\n                else if(d.tutor.includes(\"Rahul\"))\r\n                    return '\\uf578'; //fish\r\n                else\r\n                    return '\\uf563'; //cookie\r\n            })\r\n            .attr(\"x\",d=> scale(moment(d.date)))\r\n            .attr('y',(d,i)=>(15+(30*i%150)))\r\n            .attr('width',40)\r\n            .attr('height',40)\r\n            .attr(\"fill\",d =>{\r\n                if(d.resolve===undefined)\r\n                    d.resolve = 'Unresolved';\r\n                d.resolve = d.resolve.trim();\r\n                if(d.resolve==='Resolved: they get it!' || \r\n                    d.resolve==='Resolved - they get it!')\r\n                    return '#33A532';\r\n                else if(d.resolve===\"Resolved - they're still shaky\" || \r\n                    d.resolve===\"Resolved: they're still shaky\")\r\n                    return '#FAD201';\r\n                else if(d.resolve.includes('Unresolved'))\r\n                    return '#CF142B';\r\n                else   \r\n                    return '#FAD201';\r\n            })\r\n            .on(\"click\",(d)=>this.createInfo(d))\r\n            .append('title')\r\n            .attr('text',d=>d.tutor);\r\n\r\n        d3Selection.select(`#${this.rowName}`)\r\n            .classed(\"ucRow\",true)\r\n            .append(\"text\")\r\n            .attr(\"x\",5)\r\n            .attr(\"y\",75)\r\n            .classed(\"ucName\",true)\r\n            .text(this.props.lastName)\r\n            .append(\"title\")\r\n            .text(this.rowName + \" \" + this.props.lastName);        \r\n    }\r\n\r\n    createInfo(d){\r\n        const info = d3Selection.select(\"#info\");\r\n        info.classed('hideInfo',false);\r\n        info.selectAll(\"*\").remove();\r\n\r\n        for(let attr in d){\r\n            if(attr === 'date')\r\n                info.append('p').text(\"Date: \" + moment(d[attr])\r\n                .format(\"dddd, MMMM Do YYYY, h:mm:ss a\"));\r\n            else if(attr === 'resolve')\r\n                info.append('p').text(d[attr]);\r\n            else{\r\n                const attrTitle = attr[0].toUpperCase() + attr.substring(1);\r\n                info.append(\"p\").text(attrTitle+\":\"+d[attr]);\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const iconStyle = <style jsx>{this.props.styling}</style>;\r\n        const style = <style jsx>{`          \r\n        .ucRow text{\r\n            cursor:pointer;\r\n        }\r\n\r\n                  #ucContainer{\r\n            overflow-y:auto;\r\n            height:350px;\r\n          }\r\n        \r\n        .ucRow rect{\r\n            stroke:#8E8D8A;\r\n        }`    \r\n      }</style>\r\n        return <>\r\n            {iconStyle}\r\n            <styles jsx>{style}</styles>\r\n            <svg id={this.rowName} className=\"row\" width={this.props.width+150} height={140}>\r\n                <rect className=\"border\" width={this.props.width+150} height={140}/>\r\n            </svg>\r\n            </>\r\n    }\r\n}\r\n\r\nexport default UseCaseRow;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAIA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AAOA;AAAA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAIA;AACA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AAUA;AACA;AAAA;AAEA;AAAA;AAEA;AASA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAjJA;AACA;AAmJA;;;;A","sourceRoot":""}