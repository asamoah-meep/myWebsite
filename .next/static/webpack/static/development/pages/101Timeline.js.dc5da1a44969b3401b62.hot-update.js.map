{"version":3,"file":"static/webpack/static\\development\\pages\\101Timeline.js.dc5da1a44969b3401b62.hot-update.js","sources":["webpack:///./components/Timeframe.js","webpack:///./components/stickyBar.js"],"sourcesContent":["import React from 'react';\r\nimport * as d3Axis from 'd3-axis';\r\nimport * as d3Selection from 'd3-selection';\r\nimport * as d3Scale from 'd3-scale';\r\nimport * as d3Brush from 'd3-brush';\r\nimport * as d3TimeFormat from 'd3-time-format';\r\nimport moment from \"moment\";\r\n\r\nclass Timeframe extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.format = \"YYYY-MM-DD\";\r\n\r\n        this.createScale = this.createScale.bind(this);\r\n        this.updateEnd = this.updateEnd.bind(this);\r\n        this.updateStart = this.updateStart.bind(this);\r\n        this.removeScaleAndZoom = this.removeScaleAndZoom.bind(this);\r\n        this.updatePoints = this.updatePoints.bind(this);\r\n        this.createZoom = this.createZoom.bind(this);\r\n\r\n        this.scale=d3Scale.scaleTime()\r\n                .domain([moment(\"2018-09-01\"),moment('2019-05-20')])\r\n                .range([0,this.props.width+150]);\r\n\r\n        this.f = function(){\r\n            d3Selection.select(\"#zoomBox\")\r\n                .call(this.brush.move, [this.props.start,this.props.end].map(ele=>this.scale(ele)));        \r\n        }\r\n        this.brush = d3Brush.brushX()\r\n                .extent([[5,0],[this.props.width+155,110]])\r\n                .on(\"end\",()=>this.props.updateZoom(this.scale,this.f.bind(this)));\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.createScale();\r\n        this.createZoom();\r\n\r\n        const that = this;\r\n        d3Selection.selectAll(\"#timeFrame span\")\r\n            .on(\"click\",function(){\r\n                that.props.setFrame(this.innerHTML,that.f.bind(that));\r\n            });\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.removeScaleAndZoom();\r\n        this.createScale();\r\n        this.updatePoints();\r\n    }\r\n\r\n    removeScaleAndZoom(){\r\n        d3Selection.select(\"#timeScale\")\r\n            .remove();\r\n        d3Selection.selectAll(\".pointRow\")\r\n            .remove();\r\n        d3Selection.select(\"#zoomBrush\")\r\n            .selectAll(\"*\").remove();\r\n    }\r\n\r\n    updateStart(date){\r\n        this.props.updateStart(date,this.f.bind(this));\r\n    }\r\n\r\n    updateEnd(date){\r\n        this.props.updateEnd(date,this.f.bind(this));\r\n    }\r\n\r\n    createScale(){\r\n        const scale = d3Scale.scaleTime()\r\n            .domain([this.props.start,this.props.end])\r\n            .range([0,this.props.width]);\r\n\r\n        const axis = d3Axis.axisBottom(scale);\r\n\r\n        let diff = Math.abs(this.props.start.diff(this.props.end,\"months\"));\r\n\r\n        if(diff <= 3){\r\n            diff = Math.abs(this.props.start.diff(this.props.end,\"hours\"));\r\n            if(diff < 72)\r\n                axis.tickFormat(d3TimeFormat.timeFormat(\"%I%p %b %f\"));\r\n            else\r\n                axis.tickFormat(d3TimeFormat.timeFormat(\"%b %e\"));\r\n        }\r\n        else\r\n            axis.tickFormat(d3TimeFormat.timeFormat(\"%b %Y\"));\r\n\r\n\r\n        d3Selection.select(\"#timeBox\")\r\n            .append(\"g\")\r\n            .attr(\"transform\",\"translate(150,0)\")\r\n            .attr(\"id\",\"timeScale\")\r\n            .call(axis);\r\n    }\r\n\r\n    createZoom(){\r\n        const scale=this.scale;\r\n        const axis = d3Axis.axisTop(scale);\r\n        axis.tickFormat(d3TimeFormat.timeFormat(\"%b %Y\"));\r\n        const brush = this.brush;\r\n\r\n        d3Selection.select(\"#timeBox\")\r\n            .append(\"g\")\r\n            .attr(\"id\",\"zoomBox\")\r\n            .attr(\"transform\",\"translate(20,30)\");\r\n\r\n        d3Selection.select(\"#timeBox\")\r\n            .append(\"g\")\r\n            .attr(\"transform\",\"translate(25,140)\")\r\n            .call(axis);\r\n        const zoomBrush = d3Selection.select(\"#zoomBox\");\r\n\r\n        zoomBrush\r\n            .call(brush)\r\n            .call(brush.move, [this.props.start,this.props.end].map(ele=>scale(ele)));        \r\n    }\r\n\r\n    updatePoints(){\r\n        const profData = [];\r\n\r\n        for(let prof in this.props.data)\r\n            profData.push(this.props.data[prof]);\r\n\r\n        const scale = this.scale;\r\n        const yScale = d3Scale.scaleLinear()\r\n        .domain([0,profData.length])\r\n        .range([0,100]);\r\n\r\n        d3Selection.select(\"#zoomBox\")\r\n            .selectAll(\"g [class=pointRow]\")\r\n            .data(profData)\r\n            .enter()\r\n            .append('g')\r\n            .classed(\"pointRow\",true)\r\n            .attr('y',(d,i) => yScale(i));\r\n\r\n        d3Selection.selectAll('.pointRow')\r\n            .selectAll('circle [class=scalePoint]')\r\n            .data(d => d.filter(ele=>ele.date!==null))\r\n            .enter()\r\n            .append('circle')\r\n            .classed('scalePoint',true)\r\n            .attr(\"cx\",d=>scale(moment(d.date)))\r\n            .attr(\"cy\",function(d){\r\n                return +this.parentNode.getAttribute('y') + 10;\r\n            })\r\n            .attr(\"fill\",d =>{\r\n                if(d.resolve===undefined)\r\n                    d.resolve = 'Unresolved';\r\n                d.resolve = d.resolve.trim();\r\n                if(d.resolve==='Resolved: they get it!' || \r\n                    d.resolve==='Resolved - they get it!')\r\n                    return '#33A532';\r\n                else if(d.resolve===\"Resolved - they're still shaky\" || \r\n                    d.resolve===\"Resolved: they're still shaky\")\r\n                    return '#FAD201';\r\n                else if(d.resolve.includes('Unresolved'))\r\n                    return '#CF142B';\r\n                else   \r\n                    return '#FAD201';\r\n            });\r\n    }\r\n\r\n    render(){\r\n        const style = <style jsx>{`\r\n            .scalePoint{\r\n                r:3;\r\n            }\r\n          \r\n            #timeFrame span{\r\n                text-decoration:underline;\r\n                color: #D1E8E2;\r\n                cursor:pointer;\r\n            }\r\n\r\n            #timeframe span:hover{\r\n                color: #DA7B93;\r\n            }\r\n\r\n            .row .border{\r\n                fill:none;\r\n                stroke:black;\r\n            }\r\n\r\n            #zoomBox .selection{\r\n            stroke:#EAE7DC;\r\n            }\r\n          `}</style>\r\n        return(            \r\n            <>\r\n                {style}\r\n                <svg id = \"timeBox\" width={1100}>\r\n                </svg>\r\n                <br/>\r\n                <div className=\"datePicker\" id=\"startDate\">Start Date:<br/><input type='date' value={this.props.start.format('YYYY-MM-DD')} onChange={date=>this.updateStart(date)} min='2018-09-01'/></div>\r\n                <div className=\"datePicker\">End Date:<br/><input type='date' value={this.props.end.format('YYYY-MM-DD')} onChange={date=>this.updateEnd(date)} max='2019-05-20'/></div>\r\n                <div id=\"timeFrame\"><span>1 day</span> |  <span>1 week</span> |  <span>1 month</span> |  \r\n                <span>Fall Semester</span> |  <span>Spring Semester</span> |  <span>All</span></div>\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default Timeframe;","import Link from 'next/link';\r\nimport 'styles.css';\r\nimport * as THREE from 'three';\r\nimport Dropdown from 'components/dropdown.js';\r\nimport GLTFLoader from 'three-gltf-loader';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHome, faAddressCard,faEnvelope,faTasks} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass StickyBar extends React.Component{\r\n\r\n    componentDidMount(){\r\n        const scene = new THREE.Scene();\r\n        const camera = new THREE.PerspectiveCamera(75,window.innerHeight/window.innerHeight,.1,1000);\r\n\r\n        camera.position.z = 5;\r\n        camera.position.x = -1;\r\n        const renderer = new THREE.WebGLRenderer({antialias:true,alpha:true});\r\n        renderer.setSize(100,100);\r\n        renderer.setClearColor(0xffffff,0);\r\n        renderer.gammaOutput=true;\r\n        renderer.gammaFactor=2.2;\r\n        this.mount.appendChild( renderer.domElement );\r\n       \r\n        const loader = new GLTFLoader();\r\n        let logo = undefined;\r\n        \r\n        const animate = function () {\r\n            requestAnimationFrame( animate );\r\n            renderer.render( scene, camera );\r\n          };\r\n\r\n        loader.load('/Logo.gltf', function(gltf){\r\n            logo = gltf.scene;\r\n            logo.rotation.x=-Math.PI/12;\r\n            logo.rotation.y=Math.PI/12;\r\n            logo.rotation.z=Math.PI/6;\r\n            logo.scale.set(2,2,2);\r\n            scene.add(logo);\r\n            animate();\r\n\r\n        },undefined,function(error){\r\n            console.error(error);\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        const contact = <>\r\n            <p>E-mail: ja3180@nyu.edu</p>\r\n            <p>Telephone: 914-224-6241</p>\r\n            <a href=\"https://github.com/asamoah-meep\" target=\"_blank\">Github</a>\r\n        </>\r\n\r\n        const projects =             \r\n        <ul>\r\n            <li><Link href=\"/#TimelineHeader\">\r\n                <a>Tutor Timeline</a>\r\n            </Link></li>\r\n            <li><Link href=\"/#KMeansHeader\">\r\n                <a>K-Means Demo</a>\r\n            </Link></li>\r\n            <li><Link href=\"/#WebsiteHeader\">\r\n                <a>This Website</a>    \r\n            </Link></li>\r\n        </ul>\r\n\r\n        const bar = <div id='stickyBar'>\r\n            <div id=\"logoMount\" ref={ref=>(this.mount = ref)}/>\r\n            <h1 style={{position:\"relative\", left:\"12px\"}}>Jeffrey</h1>\r\n            <h1 style={{position:\"relative\", left:\"25px\"}}>Asamoah</h1>\r\n            <Link href='/'>\r\n                <a className='subHeading'><FontAwesomeIcon className='barIcon' icon={faHome}/> Home</a>\r\n            </Link>\r\n            <Link href=\"/about\">\r\n                <a className='subHeading'><FontAwesomeIcon className='barIcon' icon={faAddressCard}/> About</a>\r\n            </Link>\r\n            <FontAwesomeIcon className='barIcon' icon={faTasks}/> <Dropdown title=\"Projects\" barDropdown>{projects}</Dropdown><br/>\r\n            <FontAwesomeIcon className='barIcon' icon={faEnvelope}/> <Dropdown title='Contact and Media' barDropdown>{contact}</Dropdown>\r\n        </div>;\r\n\r\n        const style = <style>{`\r\n\r\n            #logoMount{\r\n                height:75px;\r\n            }\r\n\r\n            .barIcon{\r\n                color: #D9B08C;\r\n                display:inline-block;\r\n                position:relative;\r\n                right:5px;\r\n            }\r\n\r\n            .barDropdown{\r\n                display:inline-block;\r\n            }\r\n\r\n            #stickyBar{\r\n                vertical-align:top;\r\n                position: relative;\r\n                display:inline-block;\r\n                left:20px;\r\n                width:250px;\r\n                margin-right: 5px;\r\n                margin-top:5px;\r\n            }\r\n            .subHeading{\r\n                font-family: NunitoItalic;\r\n                color: #D9B08C;\r\n                display: block;\r\n                font-size: 1.5rem;\r\n                margin-block-start: 1em;\r\n                margin-block-end: 1em;\r\n                margin-inline-start: 0px;\r\n                margin-inline-end: 0px;\r\n                font-weight: bold;\r\n            }\r\n        `}</style>      \r\n\r\n        return <>\r\n            {style}\r\n            {bar}\r\n        </>;\r\n    }\r\n}\r\n\r\nexport default StickyBar;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AArBA;AAsBA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AAEA;AAEA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAKA;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAIA;AAEA;AAEA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AAIA;AAMA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AAUA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAuiMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAsCA;AAIA;;;;AAnHA;AACA;AAqHA;;;;A","sourceRoot":""}