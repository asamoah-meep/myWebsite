{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport 'styles.css';\nimport fallData from 'public/Data/Fall2018.json';\nimport springData from 'public/Data/Spring2019.json';\nimport Bar from 'components/stickyBar.js';\nimport Timeframe from 'components/Timeframe.js';\nimport UseCaseRow from 'components/Usecase.js';\nimport Helmet from 'react-helmet';\nimport moment from 'moment';\nimport * as d3Selection from \"d3-selection\";\nimport * as d3Scale from \"d3-scale\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDragon, faLemon, faCat, faDog, faHippo, faCrow, faCheese, faHorse, faFrog, faSpider, faBreadSlice, faFish, faAppleAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass Timeline extends React.Component {\n  constructor(props) {\n    super(props);\n    const scale = d3Scale.scaleTime().domain([moment(\"2018-09-02\"), moment(\"2019-05-21\")]).range([0, 1150]);\n    this.updateZoom = this.updateZoom.bind(this);\n    this.updateStart = this.updateStart.bind(this);\n    this.updateEnd = this.updateEnd.bind(this);\n    this.updateFrame = this.updateFrame.bind(this);\n    this.resetZoom = this.resetZoom.bind(this);\n    this.resetFilter = this.resetFilter.bind(this);\n    this.filterStudent = this.filterStudent.bind(this);\n    this.filterTutor = this.filterTutor.bind(this);\n    this.enterStudent = this.enterStudent.bind(this);\n    this.enterTutor = this.enterTutor.bind(this);\n    this.parseData = this.parseData.bind(this);\n    this.mergeData = this.mergeData.bind(this);\n    const fData = this.parseData(fallData);\n    const sData = this.parseData(springData);\n    const allData = this.mergeData(fData, sData);\n    this.state = {\n      start: moment(\"2018-09-02\"),\n      end: moment(\"2019-05-21\"),\n      scale: scale,\n      filteredData: allData,\n      initData: allData,\n      queryStudent: \"\",\n      queryTutor: \"\"\n    };\n    this.style = __jsx(\"style\", null, `\n\n          .datePicker{\n            display:inline-block;\n            position:relative;\n            left:15px;\n          }\n          \n          #filter{\n            padding-right:10px;\n            padding-bottom:10px;\n            display:inline-block;\n            width:467.5px;\n            vertical-align:bottom;\n            border-right: 2px solid #FFCB9A;\n            border-bottom: 2px solid #FFCB9A;\n            margin-bottom:20px;\n\n          }\n          \n          .hideInfo{\n            visibility: hidden;\n          }\n          \n          #legend{\n            vertical-align:top;\n            display: inline-block;\n            border:2px solid #FFCB9A;\n            padding:10px;\n            margin-left:20px;\n            position:relative;\n            width:500px;\n            padding:2px;\n            margin-bottom:20px;\n          }\n                    \n          #info{\n            text-align:left;\n            display:inline-block;\n            padding:5px;\n            margin:3px;\n            border:2px solid #FFCB9A;\n            overflow-x:auto;\n            position:relative;\n            bottom:60px;\n            left:710px;\n            width:300px;\n          }\n          \n          #info p{\n            font-size:.8em;\n            margin-block-start:.5em;\n            margin-block-end:.5em;\n          \n          }\n          \n          input{\n            background-color:#D8C3A5;\n          }\n\n          #studentForm{\n              position:relative;\n              left:8px;\n          }\n\n          #tutorForm{\n              position:relative;\n              left:27px;\n          }\n\n          #ucContainer{\n            overflow-y:auto;\n            height:350px;\n            width:1030px;\n            display:inline-block;\n          }\n          \n        `);\n  }\n\n  resetZoom(f) {\n    if (d3Selection.event.selection === null) {\n      this.setState({\n        start: moment(\"2018-09-02\"),\n        end: moment('2019-05-21')\n      }, f);\n    }\n  }\n\n  parseData(semesterData) {\n    const profData = [];\n\n    for (let student of semesterData) {\n      if (profData[student.professor] === undefined) profData[student.professor] = [];\n      profData[student.professor].push(student);\n    }\n\n    return profData;\n  }\n\n  mergeData(fData, sData) {\n    const allData = {};\n\n    for (let f in fData) allData[f] = fData[f];\n\n    for (let s in sData) {\n      if (s in allData) allData[s] = allData[s].concat(sData[s]);else allData[s] = sData[s];\n    }\n\n    return allData;\n  }\n\n  updateZoom(scale, f) {\n    let s = null,\n        e = null;\n\n    if (d3Selection.event.selection === null) {\n      this.resetZoom(f);\n      return;\n    }\n\n    [s, e] = d3Selection.event.selection.map(ele => scale.invert(ele));\n    s = moment(s);\n    e = moment(e);\n    this.setState({\n      start: s,\n      end: e\n    });\n  }\n\n  updateStart(date, f) {\n    this.setState({\n      start: moment(date)\n    }, f);\n  }\n\n  updateEnd(date, f) {\n    this.setState({\n      end: moment(date)\n    }, f);\n  }\n\n  updateFrame(frame, f) {\n    let start = this.state.start;\n    let end = this.state.end;\n\n    switch (frame) {\n      case \"1 day\":\n        end = moment(start).add(1, \"day\").isBefore(moment()) ? moment(start).add(1, \"day\") : end;\n        this.setState({\n          end: end\n        }, f);\n        break;\n\n      case \"1 week\":\n        end = moment(start).add(1, \"week\").isBefore(moment()) ? moment(start).add(1, \"week\") : end;\n        this.setState({\n          end: end\n        }, f);\n        break;\n\n      case \"1 month\":\n        end = moment(start).add(1, \"month\").isBefore(moment()) ? moment(start).add(1, \"month\") : end;\n        this.setState({\n          end: end\n        }, f);\n        break;\n\n      case \"Fall Semester\":\n        start = moment('2018-09-02');\n        end = moment('2018-12-15');\n        this.setState({\n          start: start,\n          end: end\n        }, f);\n        break;\n\n      case \"Spring Semester\":\n        start = moment('2019-01-25');\n        end = moment('2019-05-21');\n        this.setState({\n          start: start,\n          end: end\n        }, f);\n        break;\n\n      case \"All\":\n      default:\n        this.setState({\n          start: moment(\"2018-09-02\"),\n          end: moment(\"2019-05-21\")\n        }, f);\n        break;\n    }\n  }\n\n  filterStudent(event) {\n    event.preventDefault();\n    const query = this.state.queryStudent;\n    if (query === \"\" || query === null || query === undefined) return this.state.initData;\n    const filteredData = {};\n\n    for (let prof in this.state.filteredData) {\n      filteredData[prof] = [];\n    }\n\n    for (let prof in this.state.initData) {\n      for (let student of this.state.initData[prof]) {\n        if (student.name.toLowerCase().includes(query.toLowerCase())) filteredData[prof].push(student);\n      }\n    }\n\n    this.setState({\n      filteredData: filteredData,\n      queryTutor: \"\"\n    });\n  }\n\n  filterTutor(event) {\n    event.preventDefault();\n    const query = this.state.queryTutor;\n    if (query === \"\" || query === null || query === undefined) return this.state.initData;\n    const filteredData = {};\n\n    for (let prof in this.state.filteredData) {\n      filteredData[prof] = [];\n    }\n\n    for (let prof in this.state.initData) {\n      for (let student of this.state.initData[prof]) {\n        if (student.tutor.toLowerCase().includes(query.toLowerCase())) filteredData[prof].push(student);\n      }\n    }\n\n    this.setState({\n      filteredData: filteredData,\n      queryStudent: \"\"\n    });\n  }\n\n  resetFilter(evt) {\n    evt.preventDefault();\n    d3Selection.select(\"#info\").classed('hideInfo', true);\n    this.setState({\n      filteredData: this.state.initData,\n      queryStudent: \"\",\n      queryTutor: \"\"\n    });\n  }\n\n  enterStudent(evt) {\n    this.setState({\n      queryStudent: evt.target.value\n    });\n  }\n\n  enterTutor(evt) {\n    this.setState({\n      queryTutor: evt.target.value\n    });\n  }\n\n  render() {\n    const profData = [];\n    let numProfs = 0;\n    const fontStyles = `     \n        .fa,\n        .fas {\n            -moz-osx-font-smoothing: grayscale;\n            -webkit-font-smoothing: antialiased;\n            display: inline-block;\n            font-style: normal;\n            font-variant: normal;\n            text-rendering: auto;\n            line-height: 1;\n            font-family: 'Font Awesome 5 Free';\n            font-weight: 900; }\n            \n        @font-face {\n            font-family: 'Font Awesome 5 Free';\n            font-style: normal;\n            font-weight: 400;\n            font-display: auto;\n            src: url(\"/FontAwesome/fa-regular-400.eot\");\n            src: url(\"/FontAwesome/fa-regular-400.eot?#iefix\") format(\"embedded-opentype\"), url(\"/FontAwesome/fa-regular-400.woff2\") format(\"woff2\"), url(\"/FontAwesome/fa-regular-400.woff\") format(\"woff\"), url(\"/FontAwesome/fa-regular-400.ttf\") format(\"truetype\"), url(\"/FontAwesome/fa-regular-400.svg#fontawesome\") format(\"svg\"); \n        }\n        @font-face {\n            font-family: 'Font Awesome 5 Free';\n            font-style: normal;\n            font-weight: 900;\n            font-display: auto;\n            src: url(\"/FontAwesome/fa-solid-900.eot\");\n            src: url(\"/FontAwesome/fa-solid-900.eot?#iefix\") format(\"embedded-opentype\"), url(\"/FontAwesome/fa-solid-900.woff2\") format(\"woff2\"), url(\"/FontAwesome/fa-solid-900.woff\") format(\"woff\"), url(\"/FontAwesome/fa-solid-900.ttf\") format(\"truetype\"), url(\"/FontAwesome/fa-solid-900.svg#fontawesome\") format(\"svg\"); \n        }  \n            \n            `;\n\n    for (let ele in this.state.filteredData) {\n      const prof = this.state.filteredData[ele];\n      const profInfo = ele.split(\" \");\n\n      const uc = __jsx(UseCaseRow, {\n        num: numProfs++,\n        data: prof,\n        name: profInfo[0],\n        lastName: profInfo[1],\n        key: ele,\n        start: this.state.start,\n        end: this.state.end,\n        width: 850,\n        styling: fontStyles\n      });\n\n      profData.push(uc);\n    }\n\n    const ucContainer = __jsx(\"div\", {\n      id: \"ucContainer\"\n    }, profData);\n\n    const info = __jsx(\"div\", {\n      id: \"info\",\n      className: \"hideInfo\"\n    });\n\n    const timeLine = __jsx(Timeframe, {\n      width: 850,\n      start: this.state.start,\n      end: this.state.end,\n      updateZoom: this.updateZoom,\n      updateEnd: this.updateEnd,\n      updateStart: this.updateStart,\n      setFrame: this.updateFrame,\n      data: this.state.filteredData,\n      key: \"Timeline\"\n    });\n\n    const filter = __jsx(\"div\", {\n      id: \"filter\"\n    }, \" \", __jsx(\"form\", {\n      onSubmit: this.filterStudent\n    }, \"Enter the Student Name: \", __jsx(\"input\", {\n      type: \"text\",\n      id: \"studentForm\",\n      value: this.state.queryStudent,\n      onChange: this.enterStudent\n    }), __jsx(\"input\", {\n      type: \"submit\"\n    }), \" \"), __jsx(\"form\", {\n      onSubmit: this.filterTutor,\n      onReset: this.resetFilter\n    }, \"Enter the Tutor Name:  \", __jsx(\"input\", {\n      type: \"text\",\n      id: \"tutorForm\",\n      value: this.state.queryTutor,\n      onChange: this.enterTutor\n    }), __jsx(\"input\", {\n      type: \"submit\"\n    }), \" \", __jsx(\"br\", null), __jsx(\"input\", {\n      type: \"reset\"\n    })));\n\n    const legend = __jsx(\"div\", {\n      id: \"legend\"\n    }, __jsx(\"h3\", null, \"LEGEND\"), __jsx(\"p\", null, \"Jeff: \", __jsx(FontAwesomeIcon, {\n      icon: faDragon\n    }), \"  Julia: \", __jsx(FontAwesomeIcon, {\n      icon: faCat\n    }), \" Bella: \", __jsx(FontAwesomeIcon, {\n      icon: faLemon\n    }), \"Alex: \", __jsx(FontAwesomeIcon, {\n      icon: faDog\n    }), \" Alan: \", __jsx(FontAwesomeIcon, {\n      icon: faCrow\n    }), \" Hari: \", __jsx(FontAwesomeIcon, {\n      icon: faCheese\n    }), \"Ilias: \", __jsx(FontAwesomeIcon, {\n      icon: faHippo\n    }), \" \"), __jsx(\"p\", null, \" Aashish: \", __jsx(FontAwesomeIcon, {\n      icon: faHorse\n    }), \"Gilad: \", __jsx(FontAwesomeIcon, {\n      icon: faFrog\n    }), \"Cindy: \", __jsx(FontAwesomeIcon, {\n      icon: faSpider\n    }), \" Santiago: \", __jsx(FontAwesomeIcon, {\n      icon: faBreadSlice\n    }), \"Rahul: \", __jsx(FontAwesomeIcon, {\n      icon: faFish\n    }), \" Jonathan: \", __jsx(FontAwesomeIcon, {\n      icon: faAppleAlt\n    }), \" \"), __jsx(\"br\", null), __jsx(\"p\", null, __jsx(\"span\", {\n      style: {\n        color: '#CF142B'\n      }\n    }, \"Red\"), \": Unresolved\", __jsx(\"span\", {\n      style: {\n        color: \"#FAD201\"\n      }\n    }, \"     Yellow\"), \": Partially Resolved\", __jsx(\"span\", {\n      style: {\n        color: \"#33A532\"\n      }\n    }, \"     Green\"), \": Resolved\"));\n\n    return __jsx(Bar, null, this.style, __jsx(Helmet, null, __jsx(\"title\", null, \"Tutor Timeline\")), __jsx(\"h1\", null, \"2018-2019 CS101 Tutoring Timeline\"), filter, legend, ucContainer, timeLine, info);\n  }\n\n}\n\nexport default Timeline;","map":null,"metadata":{},"sourceType":"module"}