{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\myWebsite\\\\pages\\\\gallery.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'styles.css';\nimport Bar from 'components/stickyBar.js';\nimport Helmet from 'react-helmet';\nimport Dropdown from 'components/dropdown.js';\nimport Model from '../public/model';\n\nvar Gallery =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Gallery, _React$Component);\n\n  function Gallery(props) {\n    var _this;\n\n    _classCallCheck(this, Gallery);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Gallery).call(this, props));\n    _this.items = ['Logo_light', 'Logo_dark', 'Torch'];\n    return _this;\n  }\n\n  _createClass(Gallery, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var models = this.items.map(function (ele) {\n        return new Model(ele + '.gltf', false);\n      });\n      var index = 0;\n      console.log(this);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(this.items), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var modelName = _step.value;\n          console.log(modelName, this[modelName]);\n          this[modelName].addChild(models[index++]);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var style = __jsx(\"style\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"\\n            #grid{\\n                display:grid;\\n                grid-template-columns: 1fr 1f;\\n                grid-gap: 100px;\\n                grid-auto-rows: minmax(auto,150px);\\n            }\\n        \");\n\n      this.models = this.items.map(function (ele) {\n        return __jsx(Dropdown, {\n          key: ele,\n          ref: function ref(_ref) {\n            return _this2[ele] = _ref;\n          },\n          title: ele,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      });\n      return __jsx(React.Fragment, null, __jsx(Bar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(Helmet, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, __jsx(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Gallery\")), __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Gallery\"), this.models));\n    }\n  }]);\n\n  return Gallery;\n}(React.Component);\n\nexport default Gallery;","map":{"version":3,"sources":["C:/Users/User/Documents/myWebsite/pages/gallery.js"],"names":["Bar","Helmet","Dropdown","Model","Gallery","props","items","models","map","ele","index","console","log","modelName","addChild","style","ref","React","Component"],"mappings":";;;;;;;;;AAAA,OAAO,YAAP;AACA,OAAOA,GAAP,MAAgB,yBAAhB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;IAEMC,O;;;;;AAEF,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,CAAC,YAAD,EAAc,WAAd,EAA0B,OAA1B,CAAb;AAFc;AAGjB;;;;wCAEkB;AACf,UAAMC,MAAM,GAAG,KAAKD,KAAL,CAAWE,GAAX,CAAe,UAAAC,GAAG;AAAA,eAC7B,IAAIN,KAAJ,CAAUM,GAAG,GAAC,OAAd,EAAsB,KAAtB,CAD6B;AAAA,OAAlB,CAAf;AAGA,UAAIC,KAAK,GAAG,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AALe;AAAA;AAAA;;AAAA;AAMf,0CAAqB,KAAKN,KAA1B,4GAAgC;AAAA,cAAxBO,SAAwB;AAC5BF,UAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ,EAAsB,KAAKA,SAAL,CAAtB;AACA,eAAKA,SAAL,EAAgBC,QAAhB,CAAyBP,MAAM,CAACG,KAAK,EAAN,CAA/B;AACH;AATc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWlB;;;6BAEO;AAAA;;AAEJ,UAAMK,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+NAAd;;AASA,WAAKR,MAAL,GAAc,KAAKD,KAAL,CAAWE,GAAX,CAAe,UAAAC,GAAG;AAAA,eAC5B,MAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,GAAf;AAAoB,UAAA,GAAG,EAAE,aAAAO,IAAG;AAAA,mBAAG,MAAI,CAACP,GAAD,CAAJ,GAAYO,IAAf;AAAA,WAA5B;AAAiD,UAAA,KAAK,EAAEP,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,OAAlB,CAAd;AAIA,aAAO,4BACP,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,EAKK,KAAKF,MALV,CADO,CAAP;AASH;;;;EA5CiBU,KAAK,CAACC,S;;AA+C5B,eAAed,OAAf","sourcesContent":["import 'styles.css';\r\nimport Bar from 'components/stickyBar.js';\r\nimport Helmet from 'react-helmet';\r\nimport Dropdown from 'components/dropdown.js';\r\nimport Model from '../public/model';\r\n\r\nclass Gallery extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.items = ['Logo_light','Logo_dark','Torch'];\r\n    }\r\n\r\n    componentDidMount(){\r\n        const models = this.items.map(ele=>\r\n            new Model(ele+'.gltf',false));\r\n\r\n        let index = 0;\r\n        console.log(this);\r\n        for(let modelName of this.items){\r\n            console.log(modelName,this[modelName]);\r\n            this[modelName].addChild(models[index++]);\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        const style = <style>{`\r\n            #grid{\r\n                display:grid;\r\n                grid-template-columns: 1fr 1f;\r\n                grid-gap: 100px;\r\n                grid-auto-rows: minmax(auto,150px);\r\n            }\r\n        `}</style>\r\n\r\n        this.models = this.items.map(ele=>\r\n            <Dropdown key={ele} ref={ref=>(this[ele] = ref)} title={ele}/>\r\n        );\r\n\r\n        return <>\r\n        <Bar>\r\n            <Helmet>\r\n                <title>Gallery</title>\r\n            </Helmet>\r\n            <h1>Gallery</h1>\r\n            {this.models}\r\n        </Bar>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default Gallery;"]},"metadata":{},"sourceType":"module"}