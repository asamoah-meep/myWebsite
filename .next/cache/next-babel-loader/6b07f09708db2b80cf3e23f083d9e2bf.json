{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\myWebsite\\\\pages\\\\101Timeline.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/Link';\nimport '../styles.css';\nimport fallData from '../public/Data/Fall2018.json';\nimport springData from '../public/Data/Spring2019.json';\nimport Bar from '../components/stickyBar.js';\nimport Layout from '../components/Layout.js';\nimport Timeframe from '../components/Timeframe.js';\nimport UseCaseRow from '../components/Usecase.js';\nimport Helmet from 'react-helmet';\nimport moment from 'moment';\nimport * as d3Selection from \"d3-selection\";\nimport * as d3Scale from \"d3-scale\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDragon, faLemon, faCat, faDog, faHippo, faCrow, faCheese, faHorse, faFrog, faSpider, faBreadSlice, faFish, faAppleAlt } from '@fortawesome/free-solid-svg-icons';\n\nvar Timeline =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Timeline, _React$Component);\n\n  function Timeline(props) {\n    var _this;\n\n    _classCallCheck(this, Timeline);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Timeline).call(this, props));\n    var scale = d3Scale.scaleTime().domain([moment(\"2018-09-01\"), moment(\"2019-05-20\")]).range([0, 1150]);\n    _this.updateZoom = _this.updateZoom.bind(_assertThisInitialized(_this));\n    _this.updateStart = _this.updateStart.bind(_assertThisInitialized(_this));\n    _this.updateEnd = _this.updateEnd.bind(_assertThisInitialized(_this));\n    _this.updateFrame = _this.updateFrame.bind(_assertThisInitialized(_this));\n    _this.resetZoom = _this.resetZoom.bind(_assertThisInitialized(_this));\n    _this.resetFilter = _this.resetFilter.bind(_assertThisInitialized(_this));\n    _this.filterStudent = _this.filterStudent.bind(_assertThisInitialized(_this));\n    _this.filterTutor = _this.filterTutor.bind(_assertThisInitialized(_this));\n    _this.enterStudent = _this.enterStudent.bind(_assertThisInitialized(_this));\n    _this.enterTutor = _this.enterTutor.bind(_assertThisInitialized(_this));\n    _this.parseData = _this.parseData.bind(_assertThisInitialized(_this));\n    _this.mergeData = _this.mergeData.bind(_assertThisInitialized(_this));\n\n    var fData = _this.parseData(fallData);\n\n    var sData = _this.parseData(springData);\n\n    var allData = _this.mergeData(fData, sData);\n\n    _this.state = {\n      start: moment(\"2018-09-01\"),\n      end: moment(\"2019-05-20\"),\n      scale: scale,\n      filteredData: allData,\n      initData: allData,\n      queryStudent: \"\",\n      queryTutor: \"\"\n    };\n    _this.style = __jsx(\"style\", {\n      jsx: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"\\n          .App {\\n            text-align: center;\\n          }\\n          \\n          .datePicker{\\n            display:inline-block;\\n            position:relative;\\n            left:15px;\\n          }\\n          \\n          #filter{\\n            margin-bottom:3px;\\n            width:450px;\\n          }\\n          \\n          .hideInfo{\\n            visibility: hidden;\\n          }\\n          \\n          #legend{\\n            display: inline-block;\\n            border:2px solid black;\\n            width:250px;\\n            padding:2px;\\n          }\\n                    \\n          #info{\\n            text-align:left;\\n            display:inline-block;\\n            padding:5px;\\n            margin:3px;\\n            border:2px solid black;\\n            max-width:300px;\\n            overflow-x:auto;\\n          }\\n          \\n          #info p{\\n            font-size:.8em;\\n            margin-block-start:.5em;\\n            margin-block-end:.5em;\\n          \\n          }\\n          \\n          input{\\n            background-color:#D8C3A5;\\n          }\\n\\n          #studentForm{\\n              position:relative;\\n              left:8px;\\n          }\\n\\n          #tutorForm{\\n              position:relative;\\n              left:27px;\\n          }\\n\\n          #ucContainer{\\n            overflow-y:auto;\\n            height:350px;\\n            width:1030px;\\n            display:inline-block;\\n          }\\n          \\n        \");\n    return _this;\n  }\n\n  _createClass(Timeline, [{\n    key: \"resetZoom\",\n    value: function resetZoom(scale, f) {\n      if (d3Selection.event.selection === null) {\n        this.setState({\n          start: moment(\"2018-09-01\"),\n          end: moment('2019-05-20')\n        }, f);\n      }\n    }\n  }, {\n    key: \"parseData\",\n    value: function parseData(semesterData) {\n      var profData = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(semesterData), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var student = _step.value;\n          if (profData[student.professor] === undefined) profData[student.professor] = [];\n          profData[student.professor].push(student);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return profData;\n    }\n  }, {\n    key: \"mergeData\",\n    value: function mergeData(fData, sData) {\n      var allData = {};\n\n      for (var f in fData) {\n        allData[f] = fData[f];\n      }\n\n      for (var s in sData) {\n        if (s in allData) allData[s] = allData[s].concat(sData[s]);else allData[s] = sData[s];\n      }\n\n      return allData;\n    }\n  }, {\n    key: \"updateZoom\",\n    value: function updateZoom(scale, f) {\n      var s = null,\n          e = null;\n\n      if (d3Selection.event.selection === null) {\n        this.resetZoom(scale, f);\n        return;\n      }\n\n      var _d3Selection$event$se = d3Selection.event.selection.map(function (ele) {\n        return scale.invert(ele);\n      });\n\n      var _d3Selection$event$se2 = _slicedToArray(_d3Selection$event$se, 2);\n\n      s = _d3Selection$event$se2[0];\n      e = _d3Selection$event$se2[1];\n      s = moment(s);\n      e = moment(e);\n      this.setState({\n        start: s,\n        end: e\n      });\n    }\n  }, {\n    key: \"updateStart\",\n    value: function updateStart(date, f) {\n      this.setState({\n        start: moment(date)\n      }, f);\n    }\n  }, {\n    key: \"updateEnd\",\n    value: function updateEnd(date, f) {\n      this.setState({\n        end: moment(date)\n      }, f);\n    }\n  }, {\n    key: \"updateFrame\",\n    value: function updateFrame(frame, f) {\n      var start = this.state.start;\n      var end = this.state.end;\n\n      switch (frame) {\n        case \"1 day\":\n          end = moment(start).add(1, \"day\").isBefore(moment()) ? moment(start).add(1, \"day\") : end;\n          this.setState({\n            end: end\n          }, f);\n          break;\n\n        case \"1 week\":\n          end = moment(start).add(1, \"week\").isBefore(moment()) ? moment(start).add(1, \"week\") : end;\n          this.setState({\n            end: end\n          }, f);\n          break;\n\n        case \"1 month\":\n          end = moment(start).add(1, \"month\").isBefore(moment()) ? moment(start).add(1, \"month\") : end;\n          this.setState({\n            end: end\n          }, f);\n          break;\n\n        case \"Fall Semester\":\n          start = moment('2018-09-01');\n          end = moment('2018-12-15');\n          this.setState({\n            start: start,\n            end: end\n          }, f);\n          break;\n\n        case \"Spring Semester\":\n          start = moment('2019-01-25');\n          end = moment('2019-05-20');\n          this.setState({\n            start: start,\n            end: end\n          }, f);\n          break;\n\n        case \"All\":\n        default:\n          this.setState({\n            start: moment(\"2018-09-01\"),\n            end: moment(\"2019-05-20\")\n          }, f);\n          break;\n      }\n    }\n  }, {\n    key: \"filterStudent\",\n    value: function filterStudent(event) {\n      event.preventDefault();\n      var query = this.state.queryStudent;\n      if (query === \"\" || query === null || query === undefined) return this.state.initData;\n      var filteredData = {};\n\n      for (var prof in this.state.filteredData) {\n        filteredData[prof] = [];\n      }\n\n      for (var _prof in this.state.initData) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _getIterator(this.state.initData[_prof]), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var student = _step2.value;\n            if (student.name.toLowerCase().includes(query.toLowerCase())) filteredData[_prof].push(student);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      this.setState({\n        filteredData: filteredData,\n        queryTutor: \"\"\n      });\n    }\n  }, {\n    key: \"filterTutor\",\n    value: function filterTutor(event) {\n      event.preventDefault();\n      var query = this.state.queryTutor;\n      if (query === \"\" || query === null || query === undefined) return this.state.initData;\n      var filteredData = {};\n\n      for (var prof in this.state.filteredData) {\n        filteredData[prof] = [];\n      }\n\n      for (var _prof2 in this.state.initData) {\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = _getIterator(this.state.initData[_prof2]), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var student = _step3.value;\n            if (student.tutor.toLowerCase().includes(query.toLowerCase())) filteredData[_prof2].push(student);\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n              _iterator3[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n      }\n\n      this.setState({\n        filteredData: filteredData,\n        queryStudent: \"\"\n      });\n    }\n  }, {\n    key: \"resetFilter\",\n    value: function resetFilter(evt) {\n      evt.preventDefault();\n      d3Selection.select(\"#info\").classed('hideInfo', true);\n      this.setState({\n        filteredData: this.state.initData,\n        queryStudent: \"\",\n        queryTutor: \"\"\n      });\n    }\n  }, {\n    key: \"enterStudent\",\n    value: function enterStudent(evt) {\n      this.setState({\n        queryStudent: evt.target.value\n      });\n    }\n  }, {\n    key: \"enterTutor\",\n    value: function enterTutor(evt) {\n      this.setState({\n        queryTutor: evt.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var profData = [];\n      var numProfs = 0;\n      var fontStyles = \"\\n         @font-face {\\n            font-family: 'Font Awesome 5 Free';\\n            font-style: normal;\\n            font-weight: 400;\\n            font-display: auto;\\n            src: url(\\\"/FontAwesome/fa-regular-400.ttf\\\");\\n            \\n        }\\n        .fa,\\n        .fas {\\n            -moz-osx-font-smoothing: grayscale;\\n            -webkit-font-smoothing: antialiased;\\n            display: inline-block;\\n            font-style: normal;\\n            font-variant: normal;\\n            text-rendering: auto;\\n            line-height: 1;\\n            font-family: 'Font Awesome 5 Free';\\n            font-weight: 900; }\";\n\n      for (var ele in this.state.filteredData) {\n        var prof = this.state.filteredData[ele];\n        var profInfo = ele.split(\" \");\n\n        var uc = __jsx(UseCaseRow, {\n          num: numProfs++,\n          data: prof,\n          name: profInfo[0],\n          lastName: profInfo[1],\n          key: ele,\n          start: this.state.start,\n          end: this.state.end,\n          width: 850,\n          styling: fontStyles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        });\n\n        profData.push(uc);\n      }\n\n      var ucContainer = __jsx(\"div\", {\n        id: \"ucContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, profData);\n\n      var timeLine = __jsx(Timeframe, {\n        width: 850,\n        start: this.state.start,\n        end: this.state.end,\n        updateZoom: this.updateZoom,\n        updateEnd: this.updateEnd,\n        updateStart: this.updateStart,\n        setFrame: this.updateFrame,\n        data: this.state.filteredData,\n        key: \"Timeline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      });\n\n      var filter = __jsx(\"div\", {\n        id: \"filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \" \", __jsx(\"form\", {\n        onSubmit: this.filterStudent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"Enter the Student Name: \", __jsx(\"input\", {\n        type: \"text\",\n        id: \"studentForm\",\n        value: this.state.queryStudent,\n        onChange: this.enterStudent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }), __jsx(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }), \" \"), __jsx(\"form\", {\n        onSubmit: this.filterTutor,\n        onReset: this.resetFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"Enter the Tutor Name:  \", __jsx(\"input\", {\n        type: \"text\",\n        id: \"tutorForm\",\n        value: this.state.queryTutor,\n        onChange: this.enterTutor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }), __jsx(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }), \" \", __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }), __jsx(\"input\", {\n        type: \"reset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      })));\n\n      var legend = __jsx(\"div\", {\n        id: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"LEGEND\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"Jeff: \", __jsx(FontAwesomeIcon, {\n        icon: faDragon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }), \"  Julia: \", __jsx(FontAwesomeIcon, {\n        icon: faCat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }), \" Bella: \", __jsx(FontAwesomeIcon, {\n        icon: faLemon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      })), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, \"Alex: \", __jsx(FontAwesomeIcon, {\n        icon: faDog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }), \" Alan: \", __jsx(FontAwesomeIcon, {\n        icon: faCrow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }), \" Hari: \", __jsx(FontAwesomeIcon, {\n        icon: faCheese,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      })), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"Ilias: \", __jsx(FontAwesomeIcon, {\n        icon: faHippo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }), \"  Aashish: \", __jsx(FontAwesomeIcon, {\n        icon: faHorse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }), \"Gilad: \", __jsx(FontAwesomeIcon, {\n        icon: faFrog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      })), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, \"Cindy: \", __jsx(FontAwesomeIcon, {\n        icon: faSpider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }), \" Santiago: \", __jsx(FontAwesomeIcon, {\n        icon: faBreadSlice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }), \"  Rahul: \", __jsx(FontAwesomeIcon, {\n        icon: faFish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      })), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, \"Jonathan: \", __jsx(FontAwesomeIcon, {\n        icon: faAppleAlt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }), \" \"), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        style: {\n          color: '#CF142B'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, \"Red\"), \": Unresolved\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        style: {\n          color: \"#FAD201\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, \"Yellow\"), \": Partially Resolved\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        style: {\n          color: \"#33A532\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, \"Green\"), \": Resolved\"));\n\n      return __jsx(React.Fragment, null, __jsx(Bar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }), __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, this.style, __jsx(Helmet, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, __jsx(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"Tutor Timeline\")), __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"2018-2019 CS101 Tutoring Timeline\"), filter, ucContainer, legend, timeLine));\n    }\n  }]);\n\n  return Timeline;\n}(React.Component);\n\nexport default Timeline;","map":{"version":3,"sources":["C:/Users/User/Documents/myWebsite/pages/101Timeline.js"],"names":["Link","fallData","springData","Bar","Layout","Timeframe","UseCaseRow","Helmet","moment","d3Selection","d3Scale","FontAwesomeIcon","faDragon","faLemon","faCat","faDog","faHippo","faCrow","faCheese","faHorse","faFrog","faSpider","faBreadSlice","faFish","faAppleAlt","Timeline","props","scale","scaleTime","domain","range","updateZoom","bind","updateStart","updateEnd","updateFrame","resetZoom","resetFilter","filterStudent","filterTutor","enterStudent","enterTutor","parseData","mergeData","fData","sData","allData","state","start","end","filteredData","initData","queryStudent","queryTutor","style","f","event","selection","setState","semesterData","profData","student","professor","undefined","push","s","concat","e","map","ele","invert","date","frame","add","isBefore","preventDefault","query","prof","name","toLowerCase","includes","tutor","evt","select","classed","target","value","numProfs","fontStyles","profInfo","split","uc","ucContainer","timeLine","filter","legend","color","React","Component"],"mappings":"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","sourcesContent":["import Link from 'next/Link';\r\nimport '../styles.css';\r\nimport fallData from '../public/Data/Fall2018.json';\r\nimport springData from '../public/Data/Spring2019.json';\r\nimport Bar from '../components/stickyBar.js';\r\nimport Layout from '../components/Layout.js';\r\nimport Timeframe from '../components/Timeframe.js';\r\nimport UseCaseRow from '../components/Usecase.js';\r\nimport Helmet from 'react-helmet';\r\nimport moment from 'moment';\r\nimport * as d3Selection from \"d3-selection\";\r\nimport * as d3Scale from \"d3-scale\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faDragon, faLemon, faCat, faDog, faHippo, faCrow, faCheese, \r\n    faHorse, faFrog, faSpider, faBreadSlice, faFish, faAppleAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Timeline extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const scale = d3Scale.scaleTime()\r\n        .domain([moment(\"2018-09-01\"),moment(\"2019-05-20\")])\r\n        .range([0,1150]);\r\n  \r\n      this.updateZoom = this.updateZoom.bind(this);\r\n      this.updateStart=this.updateStart.bind(this);\r\n      this.updateEnd = this.updateEnd.bind(this);\r\n      this.updateFrame = this.updateFrame.bind(this);\r\n      this.resetZoom = this.resetZoom.bind(this);\r\n      this.resetFilter = this.resetFilter.bind(this);\r\n      this.filterStudent = this.filterStudent.bind(this);\r\n      this.filterTutor = this.filterTutor.bind(this);\r\n      this.enterStudent = this.enterStudent.bind(this);\r\n      this.enterTutor = this.enterTutor.bind(this);\r\n      this.parseData = this.parseData.bind(this);\r\n      this.mergeData = this.mergeData.bind(this);\r\n\r\n\r\n        const fData = this.parseData(fallData);\r\n        const sData = this.parseData(springData);\r\n\r\n        const allData = this.mergeData(fData,sData);\r\n\r\n        this.state={\r\n            start:moment(\"2018-09-01\"),\r\n            end: moment(\"2019-05-20\"),   \r\n            scale:scale,\r\n            filteredData:allData,\r\n            initData:allData,\r\n            queryStudent:\"\",\r\n            queryTutor:\"\"\r\n          }\r\n\r\n        this.style = <style jsx>{`\r\n          .App {\r\n            text-align: center;\r\n          }\r\n          \r\n          .datePicker{\r\n            display:inline-block;\r\n            position:relative;\r\n            left:15px;\r\n          }\r\n          \r\n          #filter{\r\n            margin-bottom:3px;\r\n            width:450px;\r\n          }\r\n          \r\n          .hideInfo{\r\n            visibility: hidden;\r\n          }\r\n          \r\n          #legend{\r\n            display: inline-block;\r\n            border:2px solid black;\r\n            width:250px;\r\n            padding:2px;\r\n          }\r\n                    \r\n          #info{\r\n            text-align:left;\r\n            display:inline-block;\r\n            padding:5px;\r\n            margin:3px;\r\n            border:2px solid black;\r\n            max-width:300px;\r\n            overflow-x:auto;\r\n          }\r\n          \r\n          #info p{\r\n            font-size:.8em;\r\n            margin-block-start:.5em;\r\n            margin-block-end:.5em;\r\n          \r\n          }\r\n          \r\n          input{\r\n            background-color:#D8C3A5;\r\n          }\r\n\r\n          #studentForm{\r\n              position:relative;\r\n              left:8px;\r\n          }\r\n\r\n          #tutorForm{\r\n              position:relative;\r\n              left:27px;\r\n          }\r\n\r\n          #ucContainer{\r\n            overflow-y:auto;\r\n            height:350px;\r\n            width:1030px;\r\n            display:inline-block;\r\n          }\r\n          \r\n        `}</style>\r\n    }\r\n\r\n    resetZoom(scale,f){\r\n        if(d3Selection.event.selection === null){\r\n          this.setState({\r\n              start:moment(\"2018-09-01\"),\r\n              end: moment('2019-05-20')\r\n          },f);\r\n        }\r\n    }\r\n    \r\n    parseData(semesterData){\r\n        const profData = [];\r\n        for(let student of semesterData){\r\n          if(profData[student.professor] === undefined)\r\n            profData[student.professor] = [];\r\n    \r\n          profData[student.professor].push(student); \r\n        }\r\n    \r\n        return profData;\r\n    }\r\n    \r\n      mergeData(fData,sData){\r\n        const allData = {};\r\n    \r\n        for(let f in fData)\r\n          allData[f] = fData[f];\r\n        \r\n        for(let s in sData){\r\n          if(s in allData)\r\n            allData[s] = allData[s].concat(sData[s]);\r\n          else\r\n            allData[s] = sData[s];\r\n        }\r\n    \r\n        return allData;\r\n    }\r\n\r\n    updateZoom(scale,f){\r\n        let s = null, e = null;\r\n    \r\n        if(d3Selection.event.selection === null){\r\n          this.resetZoom(scale,f);\r\n          return;\r\n        }\r\n    \r\n        [s,e] = d3Selection.event.selection.map(ele=>scale.invert(ele));\r\n        s = moment(s);\r\n        e = moment(e);\r\n        \r\n    \r\n        this.setState({\r\n          start:s,\r\n          end:e\r\n        });\r\n    }\r\n\r\n    updateStart(date,f){\r\n        this.setState({\r\n          start:moment(date)\r\n        },f);\r\n    }\r\n      \r\n    updateEnd(date,f){\r\n        this.setState({\r\n          end:moment(date)\r\n        },f);\r\n    }\r\n    \r\n    updateFrame(frame,f){\r\n    let start = this.state.start;\r\n    let end = this.state.end;\r\n\r\n    switch(frame){\r\n        case \"1 day\":\r\n        end = moment(start).add(1,\"day\").isBefore(moment()) ? moment(start).add(1,\"day\") : end;\r\n        this.setState({\r\n            end: end\r\n        }, f);\r\n        break;\r\n\r\n        case \"1 week\":     \r\n        end = moment(start).add(1,\"week\").isBefore(moment()) ? moment(start).add(1,\"week\") : end;\r\n        this.setState({\r\n            end:end\r\n        },f);\r\n        break;\r\n\r\n        case \"1 month\":\r\n        end = moment(start).add(1,\"month\").isBefore(moment()) ? moment(start).add(1,\"month\") : end;\r\n        this.setState({\r\n            end:end\r\n        },f);\r\n        break;\r\n\r\n        case \"Fall Semester\":\r\n        start = moment('2018-09-01');\r\n        end = moment('2018-12-15');\r\n        this.setState({\r\n            start:start,\r\n            end:end\r\n        },f);\r\n        break;\r\n\r\n        case \"Spring Semester\":\r\n        start = moment('2019-01-25');\r\n        end = moment('2019-05-20');\r\n        this.setState({\r\n            start:start,\r\n            end:end\r\n        },f);\r\n        break;\r\n\r\n        case \"All\":\r\n        default:\r\n        this.setState({\r\n            start:moment(\"2018-09-01\"),\r\n            end: moment(\"2019-05-20\")\r\n        },f);\r\n        break;\r\n\r\n    }\r\n    }\r\n\r\n    filterStudent(event){\r\n        event.preventDefault();\r\n    \r\n        const query = this.state.queryStudent;\r\n        if(query===\"\" || query===null || query===undefined)\r\n          return this.state.initData;\r\n          \r\n        const filteredData = {};\r\n        for(let prof in this.state.filteredData){\r\n          filteredData[prof] = [];\r\n        }\r\n        \r\n    \r\n        for(let prof in this.state.initData){\r\n          for(let student of this.state.initData[prof]){\r\n            if(student.name.toLowerCase().includes(query.toLowerCase()))\r\n              filteredData[prof].push(student);\r\n          }\r\n        }\r\n    \r\n        this.setState({\r\n          filteredData:filteredData,\r\n          queryTutor:\"\"\r\n        });\r\n    } \r\n    filterTutor(event){\r\n        event.preventDefault();\r\n    \r\n        const query = this.state.queryTutor;\r\n        if(query===\"\" || query===null || query===undefined)\r\n          return this.state.initData;\r\n          \r\n        const filteredData = {};\r\n        for(let prof in this.state.filteredData){\r\n          filteredData[prof] = [];\r\n        }\r\n        \r\n        for(let prof in this.state.initData){\r\n          for(let student of this.state.initData[prof]){\r\n            if(student.tutor.toLowerCase().includes(query.toLowerCase()))\r\n              filteredData[prof].push(student);\r\n          }\r\n        }\r\n    \r\n        this.setState({\r\n          filteredData:filteredData,\r\n          queryStudent:\"\"\r\n        });\r\n    }\r\n    resetFilter(evt){\r\n        evt.preventDefault();\r\n        d3Selection.select(\"#info\").classed('hideInfo',true);\r\n        this.setState({\r\n          filteredData:this.state.initData,\r\n          queryStudent:\"\",\r\n          queryTutor:\"\"});\r\n    }\r\n    enterStudent(evt){\r\n        this.setState({queryStudent:evt.target.value});\r\n    }\r\n    enterTutor(evt){\r\n        this.setState({queryTutor:evt.target.value});\r\n    }\r\n\r\n    render(){\r\n        \r\n        const profData = [];\r\n\r\n        let numProfs = 0;\r\n\r\n        const fontStyles = `\r\n         @font-face {\r\n            font-family: 'Font Awesome 5 Free';\r\n            font-style: normal;\r\n            font-weight: 400;\r\n            font-display: auto;\r\n            src: url(\"/FontAwesome/fa-regular-400.ttf\");\r\n            \r\n        }\r\n        .fa,\r\n        .fas {\r\n            -moz-osx-font-smoothing: grayscale;\r\n            -webkit-font-smoothing: antialiased;\r\n            display: inline-block;\r\n            font-style: normal;\r\n            font-variant: normal;\r\n            text-rendering: auto;\r\n            line-height: 1;\r\n            font-family: 'Font Awesome 5 Free';\r\n            font-weight: 900; }`;\r\n\r\n        for(let ele in this.state.filteredData){\r\n          const prof = this.state.filteredData[ele];\r\n          const profInfo = ele.split(\" \");\r\n          const uc = <UseCaseRow num={numProfs++} data ={prof} name={profInfo[0]} lastName ={profInfo[1]} key={ele}\r\n          start = {this.state.start} end = {this.state.end} width = {850} styling = {fontStyles}/>\r\n          profData.push(uc);\r\n        }\r\n    \r\n        const ucContainer = <div id=\"ucContainer\">\r\n          {profData}\r\n        </div>\r\n\r\n        const timeLine = <Timeframe width={850}start={this.state.start} end = {this.state.end} \r\n        updateZoom = {this.updateZoom}updateEnd = {this.updateEnd} updateStart={this.updateStart} \r\n        setFrame={this.updateFrame} data={this.state.filteredData} key='Timeline'/>;\r\n\r\n        const filter = <div id='filter'> <form onSubmit={this.filterStudent}>\r\n            Enter the Student Name: <input type=\"text\" id=\"studentForm\" value={this.state.queryStudent} onChange={this.enterStudent}/>\r\n            <input type='submit'/> </form>\r\n            <form onSubmit={this.filterTutor} onReset = {this.resetFilter}>\r\n                Enter the Tutor Name:  <input type=\"text\" id=\"tutorForm\" value={this.state.queryTutor} onChange={this.enterTutor}/>\r\n                <input type='submit'/> <br/>\r\n                <input type='reset'/>\r\n            </form>\r\n        </div>\r\n\r\n        const legend = <div id='legend'>\r\n        <h3>LEGEND</h3>\r\n        <p>Jeff: <FontAwesomeIcon icon={faDragon}/>  Julia: <FontAwesomeIcon icon={faCat}/> Bella: <FontAwesomeIcon icon={faLemon}/></p>\r\n        <p>Alex: <FontAwesomeIcon icon={faDog}/> Alan: <FontAwesomeIcon icon={faCrow}/> Hari: <FontAwesomeIcon icon={faCheese}/></p>\r\n        <p>Ilias: <FontAwesomeIcon icon={faHippo}/>  Aashish: <FontAwesomeIcon icon={faHorse}/>Gilad: <FontAwesomeIcon icon={faFrog}/></p>\r\n        <p>Cindy: <FontAwesomeIcon icon={faSpider}/> Santiago: <FontAwesomeIcon icon={faBreadSlice}/>  Rahul: <FontAwesomeIcon icon={faFish}/></p>\r\n        <p>Jonathan: <FontAwesomeIcon icon={faAppleAlt}/> </p>\r\n        <br/>\r\n        <p><span style={{color:'#CF142B'}}>Red</span>: Unresolved</p>\r\n        <p><span style={{color:\"#FAD201\"}}>Yellow</span>: Partially Resolved</p>\r\n        <p><span style={{color:\"#33A532\"}}>Green</span>: Resolved</p>\r\n      </div>\r\n\r\n        return<>\r\n            <Bar/>\r\n            <Layout>\r\n                {this.style}\r\n                <Helmet>\r\n                    <title>Tutor Timeline</title>\r\n                </Helmet>\r\n                <h1>2018-2019 CS101 Tutoring Timeline</h1>\r\n                {filter}\r\n                {ucContainer}\r\n                {legend} \r\n                {timeLine}\r\n            </Layout>\r\n        </>;\r\n    }\r\n\r\n}\r\n\r\nexport default Timeline;"]},"metadata":{},"sourceType":"module"}